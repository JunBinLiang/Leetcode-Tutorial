{"version":3,"sources":["../node_modules/prismjs/components/prism-excel-formula.js"],"names":["Prism","languages","comment","pattern","lookbehind","greedy","string","reference","alias","inside","operator","punctuation","sheet","file","path","function-name","range","cell","column","row","number","boolean"],"mappings":"6EAAAA,MAAAC,UAAA,kBACAC,QAAA,CACAC,QAAA,qCACAC,YAAA,EACAC,QAAA,GAEAC,OAAA,CACAH,QAAA,sBACAE,QAAA,GAEAE,UAAA,CAQAJ,QAAA,uEACAE,QAAA,EACAG,MAAA,SACAC,OAAA,CACAC,SAAA,KACAC,YAAA,IACAC,MAAA,CACAT,QAAA,WACAK,MAAA,YAEAK,KAAA,CACAV,QAAA,eACAM,OAAA,CACAE,YAAA,UAGAG,KAAA,YAGAC,gBAAA,CACAZ,QAAA,oBACAK,MAAA,WAEAQ,MAAA,CACAb,QAAA,uEACAK,MAAA,WACAC,OAAA,CACAC,SAAA,IACAO,KAAA,mBACAC,OAAA,aACAC,IAAA,WAGAF,KAAA,CAGAd,QAAA,uDACAK,MAAA,YAEAY,OAAA,+CACAC,QAAA,sBACAX,SAAA,0BACAC,YAAA,eAEAX,MAAAC,UAAA,KAAAD,MAAAC,UAAA,IAAAD,MAAAC,UAAA","file":"static/js/121.3384fd03.chunk.js","sourcesContent":["Prism.languages['excel-formula'] = {\n  'comment': {\n    pattern: /(\\bN\\(\\s*)\"(?:[^\"]|\"\")*\"(?=\\s*\\))/i,\n    lookbehind: true,\n    greedy: true\n  },\n  'string': {\n    pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n    greedy: true\n  },\n  'reference': {\n    // https://www.ablebits.com/office-addins-blog/2015/12/08/excel-reference-another-sheet-workbook/\n    // Sales!B2\n    // 'Winter sales'!B2\n    // [Sales.xlsx]Jan!B2:B5\n    // D:\\Reports\\[Sales.xlsx]Jan!B2:B5\n    // '[Sales.xlsx]Jan sales'!B2:B5\n    // 'D:\\Reports\\[Sales.xlsx]Jan sales'!B2:B5\n    pattern: /(?:'[^']*'|(?:[^\\s()[\\]{}<>*?\"';,$&]*\\[[^^\\s()[\\]{}<>*?\"']+\\])?\\w+)!/,\n    greedy: true,\n    alias: 'string',\n    inside: {\n      'operator': /!$/,\n      'punctuation': /'/,\n      'sheet': {\n        pattern: /[^[\\]]+$/,\n        alias: 'function'\n      },\n      'file': {\n        pattern: /\\[[^[\\]]+\\]$/,\n        inside: {\n          'punctuation': /[[\\]]/\n        }\n      },\n      'path': /[\\s\\S]+/\n    }\n  },\n  'function-name': {\n    pattern: /\\b[A-Z]\\w*(?=\\()/i,\n    alias: 'keyword'\n  },\n  'range': {\n    pattern: /\\$?\\b(?:[A-Z]+\\$?\\d+:\\$?[A-Z]+\\$?\\d+|[A-Z]+:\\$?[A-Z]+|\\d+:\\$?\\d+)\\b/i,\n    alias: 'property',\n    inside: {\n      'operator': /:/,\n      'cell': /\\$?[A-Z]+\\$?\\d+/i,\n      'column': /\\$?[A-Z]+/i,\n      'row': /\\$?\\d+/\n    }\n  },\n  'cell': {\n    // Excel is case insensitive, so the string \"foo1\" could be either a variable or a cell.\n    // To combat this, we match cells case insensitive, if the contain at least one \"$\", and case sensitive otherwise.\n    pattern: /\\b[A-Z]+\\d+\\b|\\$[A-Za-z]+\\$?\\d+\\b|\\b[A-Za-z]+\\$\\d+\\b/,\n    alias: 'property'\n  },\n  'number': /(?:\\b\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e[+-]?\\d+)?\\b/i,\n  'boolean': /\\b(?:TRUE|FALSE)\\b/i,\n  'operator': /[-+*/^%=&,]|<[=>]?|>=?/,\n  'punctuation': /[[\\]();{}|]/\n};\nPrism.languages['xlsx'] = Prism.languages['xls'] = Prism.languages['excel-formula'];"],"sourceRoot":""}