{"version":3,"sources":["../node_modules/prismjs/components/prism-naniscript.min.js"],"names":["e","a","n","quoted-string","pattern","alias","command-param-id","lookbehind","command-param-value","greedy","t","Array","isArray","map","join","content","languages","naniscript","comment","define","inside","value","key","label","command","command-name","expression","command-params","generic-text","escaped-char","inline-command","command-param-name","start-stop-char","nani","hooks","add","tokens","forEach","type","length","r","indexOf","push","pop","Prism"],"mappings":"+EAAA,SAAAA,GACA,IAAAC,EAAA,qBACAC,EAAA,CACAC,gBAAA,CACAC,QAAA,oBACAC,MAAA,YAEAC,mBAAA,CACAF,QAAA,WACAG,YAAA,EACAF,MAAA,YAEAG,sBAAA,EACAJ,QAAAH,EACAI,MAAA,YACK,CACLD,QAAA,aACAG,YAAA,EACAE,QAAA,EACAJ,MAAA,YACK,CACLD,QAAA,cACAC,MAAA,cAIA,SAAAK,EAAAV,GACA,uBAAAA,IAAAW,MAAAC,QAAAZ,KAAAa,IAAAH,GAAAI,KAAA,IAAAJ,EAAAV,EAAAe,SAGAf,EAAAgB,UAAAC,WAAA,CACAC,QAAA,CACAd,QAAA,gBACAG,YAAA,GAEAY,OAAA,CACAf,QAAA,QACAC,MAAA,MACAe,OAAA,CACAC,MAAA,CACAjB,QAAA,gCACAG,YAAA,EACAF,MAAA,YAEAiB,IAAA,CACAlB,QAAA,UACAG,YAAA,KAIAgB,MAAA,CACAnB,QAAA,8BACAG,YAAA,EACAF,MAAA,SAEAmB,QAAA,CACApB,QAAA,8BACAG,YAAA,EACAF,MAAA,WACAe,OAAA,CACAK,eAAA,QACAC,WAAA,CACAtB,QAAAH,EACAQ,QAAA,EACAJ,MAAA,YAEAsB,iBAAA,CACAvB,QAAA,mBACAgB,OAAAlB,KAIA0B,eAAA,CACAxB,QAAA,wBACAG,YAAA,EACAF,MAAA,cACAe,OAAA,CACAS,eAAA,cACAH,WAAA,CACAtB,QAAAH,EACAQ,QAAA,EACAJ,MAAA,YAEAyB,iBAAA,CACA1B,QAAA,4BACAK,QAAA,EACAJ,MAAA,WACAe,OAAA,CACAO,iBAAA,CACAvB,QAAA,iCACAG,YAAA,EACAa,OAAAlB,GAEA6B,qBAAA,CACA3B,QAAA,iBACAG,YAAA,EACAF,MAAA,QAEA2B,kBAAA,cAKGhC,EAAAgB,UAAAiB,KAAAjC,EAAAgB,UAAAC,WAAAjB,EAAAkC,MAAAC,IAAA,0BAAAnC,GACHA,EAAAoC,OAAAC,QAAA,SAAArC,GACA,oBAAAA,GAAA,iBAAAA,EAAAsC,KAAA,CACA,IAAArC,EAAAS,EAAAV,IACA,SAAAA,GACA,QAAAC,EAAA,GAAAC,EAAA,EAAiCA,EAAAF,EAAAuC,OAAcrC,IAAA,CAC/C,IAAAQ,EAAAV,EAAAE,GACAsC,EAAA,OAAyBC,QAAA/B,GACzB,QAAA8B,EAAA,GAAAA,EAAA,KAAAvC,EAAAyC,KAAAF,EAAA,QAAwD,GAAAvC,EAAA0C,QAAAH,EAAA,SAGxD,WAAAvC,EAAAsC,QAPA,CAQStC,KAAAD,EAAAsC,KAAA,WAAAtC,EAAAe,QAAAd,QAnHT,CAuHC2C","file":"static/js/270.0e67d474.chunk.js","sourcesContent":["!function (e) {\n  var a = /\\{[^\\r\\n\\[\\]{}]*\\}/,\n      n = {\n    \"quoted-string\": {\n      pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n      alias: \"operator\"\n    },\n    \"command-param-id\": {\n      pattern: /(\\s)\\w+:/,\n      lookbehind: !0,\n      alias: \"property\"\n    },\n    \"command-param-value\": [{\n      pattern: a,\n      alias: \"selector\"\n    }, {\n      pattern: /([\\t ])\\S+/,\n      lookbehind: !0,\n      greedy: !0,\n      alias: \"operator\"\n    }, {\n      pattern: /\\S(?:.*\\S)?/,\n      alias: \"operator\"\n    }]\n  };\n\n  function t(e) {\n    return \"string\" == typeof e ? e : Array.isArray(e) ? e.map(t).join(\"\") : t(e.content);\n  }\n\n  e.languages.naniscript = {\n    comment: {\n      pattern: /^([\\t ]*);.*/m,\n      lookbehind: !0\n    },\n    define: {\n      pattern: /^>.+/m,\n      alias: \"tag\",\n      inside: {\n        value: {\n          pattern: /(^>\\w+[\\t ]+)(?!\\s)[^{}\\r\\n]+/,\n          lookbehind: !0,\n          alias: \"operator\"\n        },\n        key: {\n          pattern: /(^>)\\w+/,\n          lookbehind: !0\n        }\n      }\n    },\n    label: {\n      pattern: /^([\\t ]*)#[\\t ]*\\w+[\\t ]*$/m,\n      lookbehind: !0,\n      alias: \"regex\"\n    },\n    command: {\n      pattern: /^([\\t ]*)@\\w+(?=[\\t ]|$).*/m,\n      lookbehind: !0,\n      alias: \"function\",\n      inside: {\n        \"command-name\": /^@\\w+/,\n        expression: {\n          pattern: a,\n          greedy: !0,\n          alias: \"selector\"\n        },\n        \"command-params\": {\n          pattern: /[\\s\\S]*\\S[\\s\\S]*/,\n          inside: n\n        }\n      }\n    },\n    \"generic-text\": {\n      pattern: /(^[ \\t]*)[^#@>;\\s].*/m,\n      lookbehind: !0,\n      alias: \"punctuation\",\n      inside: {\n        \"escaped-char\": /\\\\[{}\\[\\]\"]/,\n        expression: {\n          pattern: a,\n          greedy: !0,\n          alias: \"selector\"\n        },\n        \"inline-command\": {\n          pattern: /\\[[\\t ]*\\w+[^\\r\\n\\[\\]]*\\]/,\n          greedy: !0,\n          alias: \"function\",\n          inside: {\n            \"command-params\": {\n              pattern: /(^\\[[\\t ]*\\w+\\b)[\\s\\S]+(?=\\]$)/,\n              lookbehind: !0,\n              inside: n\n            },\n            \"command-param-name\": {\n              pattern: /^(\\[[\\t ]*)\\w+/,\n              lookbehind: !0,\n              alias: \"name\"\n            },\n            \"start-stop-char\": /[\\[\\]]/\n          }\n        }\n      }\n    }\n  }, e.languages.nani = e.languages.naniscript, e.hooks.add(\"after-tokenize\", function (e) {\n    e.tokens.forEach(function (e) {\n      if (\"string\" != typeof e && \"generic-text\" === e.type) {\n        var a = t(e);\n        (function (e) {\n          for (var a = [], n = 0; n < e.length; n++) {\n            var t = e[n],\n                r = \"[]{}\".indexOf(t);\n            if (-1 !== r) if (r % 2 == 0) a.push(r + 1);else if (a.pop() !== r) return !1;\n          }\n\n          return 0 === a.length;\n        })(a) || (e.type = \"bad-line\", e.content = a);\n      }\n    });\n  });\n}(Prism);"],"sourceRoot":""}