{"version":3,"sources":["../node_modules/prismjs/components/prism-toml.js"],"names":["Prism","key","source","insertKey","pattern","replace","languages","toml","comment","greedy","table","RegExp","lookbehind","alias","string","date","number","boolean","punctuation"],"mappings":"+EAAA,SAAAA,GACA,IAAAC,EAAA,+CAAAC,OAKA,SAAAC,EAAAC,GACA,OAAAA,EAAAC,QAAA,iBACA,OAAAJ,IAIAD,EAAAM,UAAAC,KAAA,CACAC,QAAA,CACAJ,QAAA,MACAK,QAAA,GAEAC,MAAA,CACAN,QAAAO,OAAAR,EAAA,kDAAAD,QAAA,KACAU,YAAA,EACAH,QAAA,EACAI,MAAA,cAEAZ,IAAA,CACAG,QAAAO,OAAAR,EAAA,0CAAyCD,QAAA,KACzCU,YAAA,EACAH,QAAA,EACAI,MAAA,YAEAC,OAAA,CACAV,QAAA,8EACAK,QAAA,GAEAM,KAAA,EAEAX,QAAA,oFACAS,MAAA,UACK,CAELT,QAAA,kCACAS,MAAA,WAEAG,OAAA,2KACAC,QAAA,qBACAC,YAAA,cA5CA,CA8CClB","file":"static/js/415.5e0135a1.chunk.js","sourcesContent":["(function (Prism) {\n  var key = /(?:[\\w-]+|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")/.source;\n  /**\n   * @param {string} pattern\n   */\n\n  function insertKey(pattern) {\n    return pattern.replace(/__/g, function () {\n      return key;\n    });\n  }\n\n  Prism.languages.toml = {\n    'comment': {\n      pattern: /#.*/,\n      greedy: true\n    },\n    'table': {\n      pattern: RegExp(insertKey(/(^\\s*\\[\\s*(?:\\[\\s*)?)__(?:\\s*\\.\\s*__)*(?=\\s*\\])/.source), 'm'),\n      lookbehind: true,\n      greedy: true,\n      alias: 'class-name'\n    },\n    'key': {\n      pattern: RegExp(insertKey(/(^\\s*|[{,]\\s*)__(?:\\s*\\.\\s*__)*(?=\\s*=)/.source), 'm'),\n      lookbehind: true,\n      greedy: true,\n      alias: 'property'\n    },\n    'string': {\n      pattern: /\"\"\"(?:\\\\[\\s\\S]|[^\\\\])*?\"\"\"|'''[\\s\\S]*?'''|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: true\n    },\n    'date': [{\n      // Offset Date-Time, Local Date-Time, Local Date\n      pattern: /\\b\\d{4}-\\d{2}-\\d{2}(?:[T\\s]\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|[+-]\\d{2}:\\d{2})?)?\\b/i,\n      alias: 'number'\n    }, {\n      // Local Time\n      pattern: /\\b\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?\\b/,\n      alias: 'number'\n    }],\n    'number': /(?:\\b0(?:x[\\da-zA-Z]+(?:_[\\da-zA-Z]+)*|o[0-7]+(?:_[0-7]+)*|b[10]+(?:_[10]+)*))\\b|[-+]?\\b\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?\\b|[-+]?\\b(?:inf|nan)\\b/,\n    'boolean': /\\b(?:true|false)\\b/,\n    'punctuation': /[.,=[\\]{}]/\n  };\n})(Prism);"],"sourceRoot":""}