{"version":3,"sources":["../node_modules/prismjs/components/prism-regex.min.js"],"names":["a","e","pattern","alias","n","t","source","s","RegExp","i","lookbehind","languages","regex","charset","inside","charset-negation","charset-punctuation","range","escape","range-punctuation","special-escape","charclass","backreference","group-name","anchor","group","quantifier","alternation","Prism"],"mappings":"8EAAA,SAAAA,GACA,IAAAC,EAAA,CACAC,QAAA,uBACAC,MAAA,UAEAC,EAAA,6FACAC,EAAA,eAAAD,EAAAE,OAAA,IACAC,EAAAC,OAAAH,EAAA,IAAAA,GACAI,EAAA,CACAP,QAAA,wBACAQ,YAAA,EACAP,MAAA,YAEAH,EAAAW,UAAAC,MAAA,CACAC,QAAA,CACAX,QAAA,kDACAQ,YAAA,EACAI,OAAA,CACAC,mBAAA,CACAb,QAAA,UACAQ,YAAA,EACAP,MAAA,YAEAa,sBAAA,CACAd,QAAA,UACAC,MAAA,eAEAc,MAAA,CACAf,QAAAK,EACAO,OAAA,CACAI,OAAAd,EACAe,oBAAA,CACAjB,QAAA,IACAC,MAAA,cAIAiB,iBAAAnB,EACAoB,UAAA,CACAnB,QAAA,uBACAC,MAAA,cAEAe,OAAAd,IAGAgB,iBAAAnB,EACAoB,UAAA,CACAnB,QAAA,0BACAC,MAAA,cAEAmB,cAAA,EACApB,QAAA,2BACAC,MAAA,WACK,CACLD,QAAA,eACAC,MAAA,UACAW,OAAA,CACAS,aAAAd,KAGAe,OAAA,CACAtB,QAAA,kBACAC,MAAA,YAEAe,OAAAd,EACAqB,MAAA,EACAvB,QAAA,8EACAC,MAAA,cACAW,OAAA,CACAS,aAAAd,IAEK,CACLP,QAAA,KACAC,MAAA,gBAEAuB,WAAA,CACAxB,QAAA,kCACAC,MAAA,UAEAwB,YAAA,CACAzB,QAAA,KACAC,MAAA,YAjFA,CAoFCyB","file":"static/js/350.535c2aef.chunk.js","sourcesContent":["!function (a) {\n  var e = {\n    pattern: /\\\\[\\\\(){}[\\]^$+*?|.]/,\n    alias: \"escape\"\n  },\n      n = /\\\\(?:x[\\da-fA-F]{2}|u[\\da-fA-F]{4}|u\\{[\\da-fA-F]+\\}|c[a-zA-Z]|0[0-7]{0,2}|[123][0-7]{2}|.)/,\n      t = \"(?:[^\\\\\\\\-]|\" + n.source + \")\",\n      s = RegExp(t + \"-\" + t),\n      i = {\n    pattern: /(<|')[^<>']+(?=[>']$)/,\n    lookbehind: !0,\n    alias: \"variable\"\n  };\n  a.languages.regex = {\n    charset: {\n      pattern: /((?:^|[^\\\\])(?:\\\\\\\\)*)\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*\\]/,\n      lookbehind: !0,\n      inside: {\n        \"charset-negation\": {\n          pattern: /(^\\[)\\^/,\n          lookbehind: !0,\n          alias: \"operator\"\n        },\n        \"charset-punctuation\": {\n          pattern: /^\\[|\\]$/,\n          alias: \"punctuation\"\n        },\n        range: {\n          pattern: s,\n          inside: {\n            escape: n,\n            \"range-punctuation\": {\n              pattern: /-/,\n              alias: \"operator\"\n            }\n          }\n        },\n        \"special-escape\": e,\n        charclass: {\n          pattern: /\\\\[wsd]|\\\\p{[^{}]+}/i,\n          alias: \"class-name\"\n        },\n        escape: n\n      }\n    },\n    \"special-escape\": e,\n    charclass: {\n      pattern: /\\.|\\\\[wsd]|\\\\p{[^{}]+}/i,\n      alias: \"class-name\"\n    },\n    backreference: [{\n      pattern: /\\\\(?![123][0-7]{2})[1-9]/,\n      alias: \"keyword\"\n    }, {\n      pattern: /\\\\k<[^<>']+>/,\n      alias: \"keyword\",\n      inside: {\n        \"group-name\": i\n      }\n    }],\n    anchor: {\n      pattern: /[$^]|\\\\[ABbGZz]/,\n      alias: \"function\"\n    },\n    escape: n,\n    group: [{\n      pattern: /\\((?:\\?(?:<[^<>']+>|'[^<>']+'|[>:]|<?[=!]|[idmnsuxU]+(?:-[idmnsuxU]+)?:?))?/,\n      alias: \"punctuation\",\n      inside: {\n        \"group-name\": i\n      }\n    }, {\n      pattern: /\\)/,\n      alias: \"punctuation\"\n    }],\n    quantifier: {\n      pattern: /(?:[+*?]|\\{(?:\\d+,?\\d*)\\})[?+]?/,\n      alias: \"number\"\n    },\n    alternation: {\n      pattern: /\\|/,\n      alias: \"keyword\"\n    }\n  };\n}(Prism);"],"sourceRoot":""}