{"version":3,"sources":["../node_modules/prismjs/components/prism-lilypond.min.js"],"names":["e","n","i","replace","d","languages","lilypond","comment","embedded-scheme","pattern","RegExp","lookbehind","greedy","inside","scheme","alias","embedded-lilypond","punctuation","rest","string","class-name","keyword","operator","number","ly","Prism"],"mappings":"8EAAA,SAAAA,GACA,QAAAC,EAAA,0GAAyGC,EAAA,EAAuBA,EAAA,EAAOA,IACvID,IAAAE,QAAA,qBACA,OAAAF,IAIAA,IAAAE,QAAA,uBACA,IAAAC,EAAAJ,EAAAK,UAAAC,SAAA,CACAC,QAAA,8BACAC,kBAAA,CACAC,QAAAC,OAAA,qEAAAP,QAAA,qBACA,OAAAF,IACO,KACPU,YAAA,EACAC,QAAA,EACAC,OAAA,CACAC,OAAA,CACAL,QAAA,eACAE,YAAA,EACAI,MAAA,kBACAF,OAAA,CACAG,oBAAA,CACAP,QAAA,iBACAG,QAAA,EACAC,OAAA,CACAI,YAAA,YACAX,SAAA,CACAG,QAAA,UACAM,MAAA,oBACAF,OAAA,QAIAK,KAAAlB,EAAAK,UAAAS,SAGAG,YAAA,MAGAE,OAAA,CACAV,QAAA,oBACAG,QAAA,GAEAQ,aAAA,CACAX,QAAA,mBACAE,YAAA,GAEAU,QAAA,CACAZ,QAAA,iBACAI,OAAA,CACAI,YAAA,QAGAK,SAAA,aACAL,YAAA,CACAR,QAAA,uGACAE,YAAA,GAEAY,OAAA,qBAEAnB,EAAA,mBAAAS,OAAAC,OAAAD,OAAA,qBAAAA,OAAAP,SAAAO,OAAAT,EAAAJ,EAAAK,UAAAmB,GAAApB,EA7DA,CA8DCqB","file":"static/js/232.acafb029.chunk.js","sourcesContent":["!function (e) {\n  for (var n = '\\\\((?:[^();\"#\\\\\\\\]|\\\\\\\\[^]|;.*(?!.)|\"(?:[^\"\\\\\\\\]|\\\\\\\\.)*\"|#(?:\\\\{(?:(?!#\\\\})[^])*#\\\\}|[^{])|<expr>)*\\\\)', i = 0; i < 5; i++) {\n    n = n.replace(/<expr>/g, function () {\n      return n;\n    });\n  }\n\n  n = n.replace(/<expr>/g, \"[^\\\\s\\\\S]\");\n  var d = e.languages.lilypond = {\n    comment: /%(?:(?!\\{).*|\\{[\\s\\S]*?%\\})/,\n    \"embedded-scheme\": {\n      pattern: RegExp('(^|[=\\\\s])#(?:\"(?:[^\"\\\\\\\\]|\\\\\\\\.)*\"|[^\\\\s()\"]*(?:[^\\\\s()]|<expr>))'.replace(/<expr>/g, function () {\n        return n;\n      }), \"m\"),\n      lookbehind: !0,\n      greedy: !0,\n      inside: {\n        scheme: {\n          pattern: /^(#)[\\s\\S]+$/,\n          lookbehind: !0,\n          alias: \"language-scheme\",\n          inside: {\n            \"embedded-lilypond\": {\n              pattern: /#\\{[\\s\\S]*?#\\}/,\n              greedy: !0,\n              inside: {\n                punctuation: /^#\\{|#\\}$/,\n                lilypond: {\n                  pattern: /[\\s\\S]+/,\n                  alias: \"language-lilypond\",\n                  inside: null\n                }\n              }\n            },\n            rest: e.languages.scheme\n          }\n        },\n        punctuation: /#/\n      }\n    },\n    string: {\n      pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n      greedy: !0\n    },\n    \"class-name\": {\n      pattern: /(\\\\new\\s+)[\\w-]+/,\n      lookbehind: !0\n    },\n    keyword: {\n      pattern: /\\\\[a-z][-\\w]*/i,\n      inside: {\n        punctuation: /^\\\\/\n      }\n    },\n    operator: /[=|]|<<|>>/,\n    punctuation: {\n      pattern: /(^|[a-z\\d])(?:'+|,+|[_^]?-[_^]?(?:[-+^!>._]|(?=\\d))|[_^]\\.?|[.!])|[{}()[\\]<>^~]|\\\\[()[\\]<>\\\\!]|--|__/,\n      lookbehind: !0\n    },\n    number: /\\b\\d+(?:\\/\\d+)?\\b/\n  };\n  d[\"embedded-scheme\"].inside.scheme.inside[\"embedded-lilypond\"].inside.lilypond.inside = d, e.languages.ly = d;\n}(Prism);"],"sourceRoot":""}