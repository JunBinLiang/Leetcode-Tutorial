{"version":3,"sources":["Component/Editor.js","App.js","serviceWorker.js","index.js","LeetCode/empty.md","LeetCode/twosum.md","LeetCode/903.md","LintCode/1904.md"],"names":["Editor","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","mycode","status","output","loading","onchange","bind","assertThisInitialized","handleCompile","changeOutput","previousProps","previousState","_this2","code","props","fetch","content","then","res","text","setState","newvalue","event","target","value","_this3","axios","post","lang","data","parseInt","message","console","log","B","react_default","a","createElement","Button","className","class","onClick","react_ace_lib_default","height","mode","theme","name","onChange","fontSize","showPrintMargin","showGutter","highlightActiveLine","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","type","componentClass","rows","cols","width","Component","leetcodes","Empty","Twosum","NineZeroThree","lintcodes","oneninezerofour","App","App_MySideBar","MySideBar","index","lib_default","onSelect","selected","first","split","App_Code","Toggle","Nav","defaultSelected","lib","eventKey","style","margin-left","ReactPlayer_default","url","Code","markdown","editor","_this4","Component_Editor","_this5","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","querySelector","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.76008afd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport AceEditor from \"react-ace\";\r\nimport \"ace-builds/src-noconflict/mode-java\";\r\nimport \"ace-builds/src-noconflict/theme-github\";\r\n\r\nimport Button from 'react-bootstrap/Button'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { FormControl } from 'react-bootstrap';\r\n\r\n\r\nimport '../App.css';\r\n\r\nimport axios from 'axios';\r\n\r\nclass Editor extends Component{\r\n  constructor() {\r\n    super();\r\n    this.state = {mycode:'',status:0,output:'',loading:false };\r\n\tthis.onchange = this.onchange.bind(this);\r\n\tthis.handleCompile = this.handleCompile.bind(this);\r\n\tthis.changeOutput = this.changeOutput.bind(this);\r\n  }\r\n\t\r\n componentDidUpdate(previousProps, previousState){\r\n\t  if(previousProps.code!=this.props.code){\r\n\t\t  fetch(this.props.content).then(res => res.text()).then(text => this.setState({ mycode:this.props.code }));\r\n\t  }\r\n\t  \r\n  }\r\n\t\r\n\tcomponentDidMount(){\r\n\t\tthis.setState({mycode:this.props.code});\r\n\t} \r\n\tonchange(newvalue){\r\n\t\t  this.setState({mycode:newvalue});\r\n\t}\r\n\tchangeOutput(event){\r\n\t\tthis.setState({output:event.target.value});\r\n\t}\r\n\t\r\n\thandleCompile(){\r\n\tconst headers = {\r\n        'Content-Type': 'text/plain'\r\n    };\r\n\t this.setState({loading:true});\r\n\t axios.post(`https://frozen-atoll-01566.herokuapp.com/api/run`, {\r\n\t\t lang:'java',\r\n\t\t code:this.state.mycode\r\n\t })\r\n      .then(res => {\r\n\t\t let data=res.data;\r\n\t\t let status=parseInt(data.message.status);\r\n\t\t console.log(res)\r\n\t\tthis.setState({\r\n\t\t\tstatus:status,\r\n\t\t\toutput:data.message,\r\n\t\t\tloading:false\r\n\t\t});\r\n      });\r\n\t}\r\n\t\r\n  render(){\r\n\t  let B=B=<Button className=\"outline-primary\" ><i class=\"fa fa-refresh fa-spin\"></i></Button>;\r\n\t  if(!this.state.loading)B=<Button className=\"outline-primary\" onClick={this.handleCompile}>Compile</Button>;\r\n\t  \r\n\t  return(\r\n\t\t  \t\t<div>\r\n\t\t  \t\t\t<h3>Java support only currently</h3>\r\n\t\t\t\t\t<AceEditor\r\n\t\t\t\t\t  height={250}\r\n\t\t\t\t\t  mode=\"java\"\r\n\t\t\t\t\t  theme=\"github\"\r\n\t\t\t\t\t  name=\"blah2\"\r\n\t\t\t\t\t  onChange={this.onchange}\r\n\t\t\t\t\t  fontSize={14}\r\n\t\t\t\t\t  showPrintMargin={true}\r\n\t\t\t\t\t  showGutter={true}\r\n\t\t\t\t\t  highlightActiveLine={true}\r\n\t\t\t\t\t  value={this.state.mycode}\r\n\t\t\t\t\t  setOptions={{\r\n\t\t\t\t\t  enableBasicAutocompletion: true,\r\n\t\t\t\t\t  enableLiveAutocompletion: true,\r\n\t\t\t\t\t  enableSnippets: false,\r\n\t\t\t\t\t  showLineNumbers: true,\r\n\t\t\t\t\t  tabSize: 2,\r\n\t\t\t\t  }}/>\r\n\t\t  \t\t  <br/>\r\n\t\t  \t\t  {B}\r\n\t\t  \t\t<br/><br/>\r\n\t\t\t\t <textarea\r\n\t\t  \t\t\t  className=\"output\"\r\n\t\t\t\t\t  name=\"code\"\r\n\t\t\t\t\t  type=\"textarea\"\r\n\t\t\t\t\t  componentClass=\"textarea\"\r\n\t\t\t\t\t  rows=\"5\"\r\n\t\t  \t\t\t  cols=\"75\"\r\n\t\t  \t\t\t  width={250}\r\n\t\t\t\t\t  value={this.state.output}\r\n\t\t  \t\t\t  onChange={this.changeOutput}\r\n\t\t\t\t />\r\n\t\t  \t\t</div>\r\n\t  );\r\n\t  \r\n  }\r\n}\r\n\r\nexport default Editor;","import React, { Component } from \"react\";\nimport { Route, Switch, NavLink,BrowserRouter as Router } from \"react-router-dom\";\nimport renderHTML from 'react-render-html';\nimport ReactMarkdown from 'react-markdown';\n\n\nimport SideNav, { Toggle, Nav, NavItem, NavIcon, NavText } from '@trendmicro/react-sidenav';\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\nimport Button from 'react-bootstrap/Button'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport AceEditor from \"react-ace\";\nimport \"ace-builds/src-noconflict/mode-java\";\nimport \"ace-builds/src-noconflict/theme-github\";\n\nimport Editor from './Component/Editor';\n\n\nimport ReactPlayer from \"react-player\"\n\n\n\nimport Twosum from './LeetCode/twosum.md';\nimport NineZeroThree from './LeetCode/903.md';\nimport Empty from './LeetCode/empty.md';\n\nimport oneninezerofour from './LintCode/1904.md';\n\nlet leetcodes=[[Empty,\"\"],[Twosum,\"\"],[NineZeroThree,\"https://www.youtube.com/watch?v=bo26ZbpYT60&feature=youtu.be\"]];\n\nlet lintcodes=[[Empty,\"\"],[oneninezerofour,\"\"]];\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n\t\t<MySideBar/>\n      </div>\n    );\n  }\n}\n//https://reactjsexample.com/react-side-nav-component/\nclass MySideBar extends Component{\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = { index: 0,code:null };\n     } \n\trender(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<SideNav\n\t\t\t\t\tonSelect={(selected) => {\n\t\t\t\t\t\t// Add your code here\n\t\t\t\t\t\tlet first=selected.split(' ')[0];\n\t\t\t\n\t\t\t\t\t\tif(first=='Leetcode'){\n\t\t\t\t\t\t\tconsole.log(parseInt(selected.split(' ')[1]))\n\t\t\t\t\t\t\tthis.setState({ index: parseInt(selected.split(' ')[1]),code:<Code content={leetcodes[parseInt(selected.split(' ')[1])][0]}/> })\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(first=='LintCode'){\n\t\t\t\t\t\t\tthis.setState({ index: parseInt(selected.split(' ')[1]),code:<Code content={lintcodes[parseInt(selected.split(' ')[1])][0]}/> })\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tthis.setState({ index: 0,code:null })\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<SideNav.Toggle />\n\t\t\t\t\t<SideNav.Nav defaultSelected=\"home\">\n\t\t\t\t\t\t<NavItem eventKey=\"home\">\n\t\t\t\t\t\t\t<NavIcon>\n\t\t\t\t\t\t\t\t<i className=\"fa fa-fw fa-home\" style={{ fontSize: '1.75em' }} />\n\t\t\t\t\t\t\t</NavIcon>\n\t\t\t\t\t\t\t<NavText>\n\t\t\t\t\t\t\t\tHome\n\t\t\t\t\t\t\t</NavText>\n\t\t\t\t\t\t</NavItem>\n\n\t\t\t\t\t\t<NavItem eventKey=\"Leetcode\">\n\t\t\t\t\t\t\t<NavIcon>\n\t\t\t\t\t\t\t\tLeetCode\n\t\t\t\t\t\t\t</NavIcon>\n\t\t\t\t\t\t\t<NavItem eventKey=\"Leetcode 1\">\n\t\t\t\t\t\t\t\t<NavText>\n\t\t\t\t\t\t\t\t\t1. Two sum\n\t\t\t\t\t\t\t\t</NavText>\n\t\t\t\t\t\t\t</NavItem>\n\t\t\t\t\t\t   <NavItem eventKey=\"Leetcode 2\">\n\t\t\t\t\t\t\t\t<NavText>\n\t\t\t\t\t\t\t\t\t903. Valid Permutations for DI Sequence\n\t\t\t\t\t\t\t\t</NavText>\n\t\t\t\t\t\t   </NavItem>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</NavItem>\n\t\t\t\t\n\t\t\t\t\t\t<NavItem eventKey=\"LintCode\">\n\t\t\t\t\t\t\t<NavIcon>\n\t\t\t\t\t\t\t\tLintCode\n\t\t\t\t\t\t\t</NavIcon>\n\n\t\t\t\t\t\t\t<NavItem eventKey=\"LintCode 1\">\n\t\t\t\t\t\t\t\t<NavText>\n\t\t\t\t\t\t\t\t\t1904. Put small balls\n\t\t\t\t\t\t\t\t</NavText>\n\t\t\t\t\t\t\t</NavItem>\n\t\t\t\t\t\t</NavItem>\n\n\t\t\t\t\t</SideNav.Nav>\n\t\t\t\t</SideNav>\n\t\t\t\t\n\t\t\t\t<div style={{'width':'50%','margin-left':'20%'}}>\n\t\t\t\t\t<ReactPlayer\n        \t\t\t\turl={leetcodes[this.state.index][1]}\n      \t\t\t\t/> \n\t\t\t\t\t{this.state.code}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nclass Code extends Component {\n  constructor() {\n    super();\n    this.state = { markdown: '',editor:null };\n  }\n  componentDidMount() {\n    fetch(this.props.content).then(res => res.text()).then(text => this.setState({ markdown: text,editor:<Editor code={text}/> }));\n  }\n  componentDidUpdate(previousProps, previousState){\n\t  if(previousProps.content!=this.props.content){\n\t\t  fetch(this.props.content).then(res => res.text()).then(text => this.setState({ markdown:text,editor:<Editor code={text}/> }));\n\t  }\n\t  \n  } \n  render() {\n    const { markdown } = this.state;\n    return(\n\t\t<div>\n\t\t\t<br/>\n\t\t\t{this.state.editor}\n\t\t\t<br/>\n\t\t</div>\n\n\t)\n  }\n}\n\n\n\nexport default App;\n\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter } from \"react-router-dom\";\nReactDOM.render(\n\n\t\t<App />,\n  document.querySelector('#root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/empty.d41d8cd9.md\";","module.exports = __webpack_public_path__ + \"static/media/twosum.6f9050e4.md\";","module.exports = __webpack_public_path__ + \"static/media/903.242a3082.md\";","module.exports = __webpack_public_path__ + \"static/media/1904.adcef17b.md\";"],"sourceRoot":""}