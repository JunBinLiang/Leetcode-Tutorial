{"version":3,"sources":["App.js","serviceWorker.js","index.js","Code/twosum.md","Code/threesum.md","Code/empty.md"],"names":["codes","Empty","Twosum","Threesum","App","react_default","a","createElement","App_MySideBar","Component","MySideBar","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","index","code","_this2","lib_default","onSelect","selected","isNaN","setState","parseInt","App_Code","content","Toggle","Nav","defaultSelected","lib","eventKey","className","style","fontSize","width","margin-left","ReactPlayer_default","url","Code","_this3","markdown","editor","_this4","fetch","props","then","res","text","App_Editor","previousProps","previousState","_this5","background-color","react_markdown_default","source","Editor","_this6","mycode","onchange","bind","assertThisInitialized","_this7","newvalue","react_ace_lib_default","mode","theme","name","onChange","showPrintMargin","showGutter","highlightActiveLine","value","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","querySelector","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.981cba96.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Route, Switch, NavLink,BrowserRouter as Router } from \"react-router-dom\";\nimport renderHTML from 'react-render-html';\nimport ReactMarkdown from 'react-markdown';\nimport Markdown1 from 'markdown-to-jsx';\nimport SideNav, { Toggle, Nav, NavItem, NavIcon, NavText } from '@trendmicro/react-sidenav';\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\n\n\nimport AceEditor from \"react-ace\";\nimport \"ace-builds/src-noconflict/mode-java\";\nimport \"ace-builds/src-noconflict/theme-github\";\n\n\nimport \"video-react/dist/video-react.css\"; // import css\nimport ReactPlayer from \"react-player\"\nimport Twosum from './Code/twosum.md';\nimport Threesum from './Code/threesum.md';\nimport Empty from './Code/empty.md';\n\nlet codes=[[Empty,\"\"],[Twosum,\"https://www.youtube.com/watch?v=R6RAumiDmKQ\"],[Threesum,\"https://www.youtube.com/watch?v=R6RAumiDmKQ\"]];\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n\t\t<MySideBar/>\n      </div>\n    );\n  }\n}\n\n\n\n//https://reactjsexample.com/react-side-nav-component/\nclass MySideBar extends Component{\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = { index: 0,code:null };\n     } \n\trender(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<SideNav\n\t\t\t\t\tonSelect={(selected) => {\n\t\t\t\t\t\t// Add your code here\n\t\t\t\t\t\tif(!isNaN(selected)){\n\t\t\t\t\t\t\tthis.setState({ index: parseInt(selected),code:<Code content={codes[parseInt(selected)][0]}/> })\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tthis.setState({ index: 0,code:null })\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<SideNav.Toggle />\n\t\t\t\t\t<SideNav.Nav defaultSelected=\"home\">\n\t\t\t\t\t\t<NavItem eventKey=\"home\">\n\t\t\t\t\t\t\t<NavIcon>\n\t\t\t\t\t\t\t\t<i className=\"fa fa-fw fa-home\" style={{ fontSize: '1.75em' }} />\n\t\t\t\t\t\t\t</NavIcon>\n\t\t\t\t\t\t\t<NavText>\n\t\t\t\t\t\t\t\tHome\n\t\t\t\t\t\t\t</NavText>\n\t\t\t\t\t\t</NavItem>\n\n\t\t\t\t\t\t<NavItem eventKey=\"Leetcode\">\n\t\t\t\t\t\t\t<NavIcon>\n\t\t\t\t\t\t\t\t<i className=\"fa fa-fw fa-line-chart\" style={{ fontSize: '1.75em' }} />\n\t\t\t\t\t\t\t</NavIcon>\n\t\t\t\t\t\t\t<NavText>\n\t\t\t\t\t\t\t\tLeetcode\n\t\t\t\t\t\t\t</NavText>\n\t\t\t\t\t\t\t<NavItem eventKey=\"1\">\n\t\t\t\t\t\t\t\t<NavText>\n\t\t\t\t\t\t\t\t\t2 sum\n\t\t\t\t\t\t\t\t</NavText>\n\t\t\t\t\t\t\t</NavItem>\n\t\t\t\t\t\t\t<NavItem eventKey=\"2\">\n\t\t\t\t\t\t\t\t<NavText>\n\t\t\t\t\t\t\t\t\t3 sum\n\t\t\t\t\t\t\t\t</NavText>\n\t\t\t\t\t\t\t</NavItem>\n\t\t\t\t\t\t</NavItem>\n\t\t\t\t\t</SideNav.Nav>\n\t\t\t\t</SideNav>\n\t\t\t\t\n\t\t\t\t<div style={{'width':'50%','margin-left':'20%'}}>\n\t\t\t\t\t<ReactPlayer\n        \t\t\t\turl={codes[this.state.index][1]}\n      \t\t\t\t/> \n\t\t\t\t\t{this.state.code}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nclass Code extends Component {\n  constructor() {\n    super();\n    this.state = { markdown: '',editor:null };\n\t\n  }\n  componentDidMount() {\n    fetch(this.props.content).then(res => res.text()).then(text => this.setState({ markdown: text,editor:<Editor code={text}/> }));\n  }\n  componentDidUpdate(previousProps, previousState){\n\t  if(previousProps.content!=this.props.content){\n\t\t  fetch(this.props.content).then(res => res.text()).then(text => this.setState({ markdown:text,editor:<Editor code={text}/> }));\n\t  }\n\t  \n  } \n\t\n\t\n  render() {\n    const { markdown } = this.state;\n    return(\n\t\t<div>\n\t\t\t<div  style={{'background-color':'#FFEBCD'}}> \n\t\t\t\t<ReactMarkdown source={markdown} />\n\t\t\t</div>\n\t\t\t{this.state.editor}\n\t\t</div>\n\n\t)\n  }\n}\n\nclass Editor extends Component{\n  constructor() {\n    super();\n    this.state = {mycode:'' };\n\tthis.onchange = this.onchange.bind(this);\n  }\n\t\n componentDidUpdate(previousProps, previousState){\n\t  if(previousProps.code!=this.props.code){\n\t\t  fetch(this.props.content).then(res => res.text()).then(text => this.setState({ mycode:this.props.code }));\n\t  }\n\t  \n  }\n\t\n\tcomponentDidMount(){\n\t\tthis.setState({mycode:this.props.code});\n\t} \n\t onchange(newvalue){\n\t\t  this.setState({mycode:newvalue});\n\t  }\n\t\n  render(){\n\t  return(\n\t  \t\t\t<AceEditor\n\t\t\t\t  mode=\"java\"\n\t\t\t\t  theme=\"github\"\n\t\t\t\t  name=\"blah2\"\n\t\t\t\t  onChange={this.onchange}\n\t\t\t\t  fontSize={14}\n\t\t\t\t  showPrintMargin={true}\n\t\t\t\t  showGutter={true}\n\t\t\t\t  highlightActiveLine={true}\n\t\t\t\t  value={this.state.mycode}\n\t\t\t\t  setOptions={{\n\t\t\t\t  enableBasicAutocompletion: true,\n\t\t\t\t  enableLiveAutocompletion: true,\n\t\t\t\t  enableSnippets: false,\n\t\t\t\t  showLineNumbers: true,\n\t\t\t\t  tabSize: 2,\n\t\t\t  }}/>\n\t  );\n\t  \n  }\n\t\n}\n\nexport default App;\n\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter } from \"react-router-dom\";\nReactDOM.render(\n\n\t\t<App />,\n  document.querySelector('#root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/twosum.bef4f84e.md\";","module.exports = __webpack_public_path__ + \"static/media/threesum.2092c7de.md\";","module.exports = __webpack_public_path__ + \"static/media/empty.d41d8cd9.md\";"],"sourceRoot":""}