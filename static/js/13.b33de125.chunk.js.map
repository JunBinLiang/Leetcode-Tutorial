{"version":3,"sources":["../node_modules/prismjs/components/prism-antlr4.min.js"],"names":["Prism","languages","antlr4","comment","string","pattern","greedy","character-class","alias","inside","range","lookbehind","escape","punctuation","action","content","command","function","annotation","label","keyword","definition","constant","operator","g4"],"mappings":"6EAAAA,MAAAC,UAAAC,OAAA,CACAC,QAAA,gCACAC,OAAA,CACAC,QAAA,wBACAC,QAAA,GAEAC,kBAAA,CACAF,QAAA,2BACAC,QAAA,EACAE,MAAA,QACAC,OAAA,CACAC,MAAA,CACAL,QAAA,yCACAM,YAAA,EACAH,MAAA,eAEAI,OAAA,sEACAC,YAAA,WAGAC,OAAA,CACAT,QAAA,0DACAC,QAAA,EACAG,OAAA,CACAM,QAAA,CACAV,QAAA,oBACAM,YAAA,GAEAE,YAAA,SAGAG,QAAA,CACAX,QAAA,oEACAM,YAAA,EACAF,OAAA,CACAQ,SAAA,yBACAJ,YAAA,UAGAK,WAAA,CACAb,QAAA,iBACAG,MAAA,WAEAW,MAAA,CACAd,QAAA,aACAG,MAAA,eAEAY,QAAA,gHACAC,WAAA,EACAhB,QAAA,qBACAG,MAAA,uBACG,CACHH,QAAA,qBACAG,MAAA,uBAEAc,SAAA,mBACAC,SAAA,wBACAV,YAAA,WACCb,MAAAC,UAAAuB,GAAAxB,MAAAC,UAAAC","file":"static/js/13.b33de125.chunk.js","sourcesContent":["Prism.languages.antlr4 = {\n  comment: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n  string: {\n    pattern: /'(?:\\\\.|[^\\\\'\\r\\n])*'/,\n    greedy: !0\n  },\n  \"character-class\": {\n    pattern: /\\[(?:\\\\.|[^\\\\\\]\\r\\n])*\\]/,\n    greedy: !0,\n    alias: \"regex\",\n    inside: {\n      range: {\n        pattern: /([^[]|(?:^|[^\\\\])(?:\\\\\\\\)*\\\\\\[)-(?!\\])/,\n        lookbehind: !0,\n        alias: \"punctuation\"\n      },\n      escape: /\\\\(?:u(?:[a-fA-F\\d]{4}|\\{[a-fA-F\\d]+\\})|[pP]\\{[=\\w-]+\\}|[^\\r\\nupP])/,\n      punctuation: /[\\[\\]]/\n    }\n  },\n  action: {\n    pattern: /\\{(?:[^{}]|\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\\}/,\n    greedy: !0,\n    inside: {\n      content: {\n        pattern: /(\\{)[\\s\\S]+(?=\\})/,\n        lookbehind: !0\n      },\n      punctuation: /[{}]/\n    }\n  },\n  command: {\n    pattern: /(->\\s*)(?:\\s*(?:,\\s*)?\\b[a-z]\\w*(?:\\s*\\([^()\\r\\n]*\\))?)+(?=\\s*;)/i,\n    lookbehind: !0,\n    inside: {\n      function: /\\b\\w+(?=\\s*(?:[,(]|$))/,\n      punctuation: /[,()]/\n    }\n  },\n  annotation: {\n    pattern: /@\\w+(?:::\\w+)*/,\n    alias: \"keyword\"\n  },\n  label: {\n    pattern: /#[ \\t]*\\w+/,\n    alias: \"punctuation\"\n  },\n  keyword: /\\b(?:catch|channels|finally|fragment|grammar|import|lexer|locals|mode|options|parser|returns|throws|tokens)\\b/,\n  definition: [{\n    pattern: /\\b[a-z]\\w*(?=\\s*:)/,\n    alias: [\"rule\", \"class-name\"]\n  }, {\n    pattern: /\\b[A-Z]\\w*(?=\\s*:)/,\n    alias: [\"token\", \"constant\"]\n  }],\n  constant: /\\b[A-Z][A-Z_]*\\b/,\n  operator: /\\.\\.|->|[|~]|[*+?]\\??/,\n  punctuation: /[;:()=]/\n}, Prism.languages.g4 = Prism.languages.antlr4;"],"sourceRoot":""}