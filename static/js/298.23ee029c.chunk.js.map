{"version":3,"sources":["../node_modules/prismjs/components/prism-pascaligo.min.js"],"names":["e","n","replace","t","languages","pascaligo","comment","string","pattern","greedy","class-name","RegExp","lookbehind","inside","keyword","boolean","builtin","function","number","operator","punctuation","i","reduce","forEach","Prism"],"mappings":"8EAAA,SAAAA,GACA,IAAAC,EAAA,iCAAAC,QAAA,uBACA,yDAEAC,EAAAH,EAAAI,UAAAC,UAAA,CACAC,QAAA,0BACAC,OAAA,CACAC,QAAA,8CACAC,QAAA,GAEAC,aAAA,EACAF,QAAAG,OAAA,oCAAAT,QAAA,qBACA,OAAAD,IACO,KACPW,YAAA,EACAC,OAAA,MACK,CACLL,QAAAG,OAAA,sBAAAT,QAAA,qBACA,OAAAD,IACO,KACPY,OAAA,MACK,CACLL,QAAAG,OAAA,gBAAAT,QAAA,qBACA,OAAAD,KAEAW,YAAA,EACAC,OAAA,OAEAC,QAAA,CACAN,QAAA,mIACAI,YAAA,GAEAG,QAAA,CACAP,QAAA,8BACAI,YAAA,GAEAI,QAAA,CACAR,QAAA,4DACAI,YAAA,GAEAK,SAAA,gBACAC,OAAA,0EACAC,SAAA,2EACAC,YAAA,4BAEAC,EAAA,yDAAAC,OAAA,SAAAtB,EAAAC,GACA,OAAAD,EAAAC,GAAAE,EAAAF,GAAAD,GACG,IACHG,EAAA,cAAAoB,QAAA,SAAAvB,GACAA,EAAAa,OAAAQ,IAjDA,CAmDCG","file":"static/js/298.23ee029c.chunk.js","sourcesContent":["!function (e) {\n  var n = \"(?:\\\\w+(?:<braces>)?|<braces>)\".replace(/<braces>/g, function () {\n    return \"\\\\((?:[^()]|\\\\((?:[^()]|\\\\([^()]*\\\\))*\\\\))*\\\\)\";\n  }),\n      t = e.languages.pascaligo = {\n    comment: /\\(\\*[\\s\\S]+?\\*\\)|\\/\\/.*/,\n    string: {\n      pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|\\^[a-z]/i,\n      greedy: !0\n    },\n    \"class-name\": [{\n      pattern: RegExp(\"(\\\\btype\\\\s+\\\\w+\\\\s+is\\\\s+)<type>\".replace(/<type>/g, function () {\n        return n;\n      }), \"i\"),\n      lookbehind: !0,\n      inside: null\n    }, {\n      pattern: RegExp(\"<type>(?=\\\\s+is\\\\b)\".replace(/<type>/g, function () {\n        return n;\n      }), \"i\"),\n      inside: null\n    }, {\n      pattern: RegExp(\"(:\\\\s*)<type>\".replace(/<type>/g, function () {\n        return n;\n      })),\n      lookbehind: !0,\n      inside: null\n    }],\n    keyword: {\n      pattern: /(^|[^&])\\b(?:begin|block|case|const|else|end|fail|for|from|function|if|is|nil|of|remove|return|skip|then|type|var|while|with)\\b/i,\n      lookbehind: !0\n    },\n    boolean: {\n      pattern: /(^|[^&])\\b(?:True|False)\\b/i,\n      lookbehind: !0\n    },\n    builtin: {\n      pattern: /(^|[^&])\\b(?:bool|int|list|map|nat|record|string|unit)\\b/i,\n      lookbehind: !0\n    },\n    function: /\\w+(?=\\s*\\()/i,\n    number: [/%[01]+|&[0-7]+|\\$[a-f\\d]+/i, /\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?(?:mtz|n)?/i],\n    operator: /->|=\\/=|\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=|]|\\b(?:and|mod|or)\\b/,\n    punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.{}]/\n  },\n      i = [\"comment\", \"keyword\", \"builtin\", \"operator\", \"punctuation\"].reduce(function (e, n) {\n    return e[n] = t[n], e;\n  }, {});\n  t[\"class-name\"].forEach(function (e) {\n    e.inside = i;\n  });\n}(Prism);"],"sourceRoot":""}