{"version":3,"sources":["../node_modules/prismjs/components/prism-qml.js"],"names":["Prism","jsString","source","jsComment","jsExpr","replace","i","languages","qml","comment","pattern","greedy","javascript-function","RegExp","lookbehind","alias","inside","javascript","class-name","property","keyword","javascript-expression","string","punctuation"],"mappings":"8EAAA,SAAAA,GASA,IARA,IAAAC,EAAA,8CAAAC,OACAC,EAAA,yCAAAD,OACAE,EAAA,iGAAoGF,OAAAG,QAAA,uBACpG,OAAAJ,IACGI,QAAA,wBACH,OAAAF,IAGAG,EAAA,EAAiBA,EAAA,EAAOA,IACxBF,IAAAC,QAAA,qBACA,OAAAD,IAIAA,IAAAC,QAAA,uBACAL,EAAAO,UAAAC,IAAA,CACAC,QAAA,CACAC,QAAA,0BACAC,QAAA,GAEAC,sBAAA,CACAF,QAAAG,OAAA,2FAA+GX,OAAAG,QAAA,mBAC/G,OAAAD,IACO,KACPU,YAAA,EACAH,QAAA,EACAI,MAAA,sBACAC,OAAAhB,EAAAO,UAAAU,YAEAC,aAAA,CACAR,QAAA,sDACAI,YAAA,GAEAK,SAAA,EACAT,QAAA,oDACAI,YAAA,GACK,CACLJ,QAAA,2FACAI,YAAA,EACAE,OAAA,CACAI,QAAA,YACAD,SAAA,mBAGAE,wBAAA,CACAX,QAAAG,OAAA,0CAAsDX,OAAAG,QAAA,mBACtD,OAAAD,IACO,KACPU,YAAA,EACAH,QAAA,EACAI,MAAA,sBACAC,OAAAhB,EAAAO,UAAAU,YAEAK,OAAA,wBACAF,QAAA,uBACAG,YAAA,cAxDA,CA0DCvB","file":"static/js/339.8e776866.chunk.js","sourcesContent":["(function (Prism) {\n  var jsString = /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|'(?:\\\\.|[^\\\\'\\r\\n])*'/.source;\n  var jsComment = /\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\//.source;\n  var jsExpr = /(?:[^\\\\()[\\]{}\"'/]|<string>|\\/(?![*/])|<comment>|\\(<expr>*\\)|\\[<expr>*\\]|\\{<expr>*\\}|\\\\[\\s\\S])/.source.replace(/<string>/g, function () {\n    return jsString;\n  }).replace(/<comment>/g, function () {\n    return jsComment;\n  }); // the pattern will blow up, so only a few iterations\n\n  for (var i = 0; i < 2; i++) {\n    jsExpr = jsExpr.replace(/<expr>/g, function () {\n      return jsExpr;\n    });\n  }\n\n  jsExpr = jsExpr.replace(/<expr>/g, '[^\\\\s\\\\S]');\n  Prism.languages.qml = {\n    'comment': {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n      greedy: true\n    },\n    'javascript-function': {\n      pattern: RegExp(/((?:^|;)[ \\t]*)function\\s+[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\s*\\(<js>*\\)\\s*\\{<js>*\\}/.source.replace(/<js>/g, function () {\n        return jsExpr;\n      }), 'm'),\n      lookbehind: true,\n      greedy: true,\n      alias: 'language-javascript',\n      inside: Prism.languages.javascript\n    },\n    'class-name': {\n      pattern: /((?:^|[:;])[ \\t]*)(?!\\d)\\w+(?=[ \\t]*\\{|[ \\t]+on\\b)/m,\n      lookbehind: true\n    },\n    'property': [{\n      pattern: /((?:^|[;{])[ \\t]*)(?!\\d)\\w+(?:\\.\\w+)*(?=[ \\t]*:)/m,\n      lookbehind: true\n    }, {\n      pattern: /((?:^|[;{])[ \\t]*)property[ \\t]+(?!\\d)\\w+(?:\\.\\w+)*[ \\t]+(?!\\d)\\w+(?:\\.\\w+)*(?=[ \\t]*:)/m,\n      lookbehind: true,\n      inside: {\n        'keyword': /^property/,\n        'property': /\\w+(?:\\.\\w+)*/\n      }\n    }],\n    'javascript-expression': {\n      pattern: RegExp(/(:[ \\t]*)(?![\\s;}[])(?:(?!$|[;}])<js>)+/.source.replace(/<js>/g, function () {\n        return jsExpr;\n      }), 'm'),\n      lookbehind: true,\n      greedy: true,\n      alias: 'language-javascript',\n      inside: Prism.languages.javascript\n    },\n    'string': /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    'keyword': /\\b(?:as|import|on)\\b/,\n    'punctuation': /[{}[\\]:;,]/\n  };\n})(Prism);"],"sourceRoot":""}