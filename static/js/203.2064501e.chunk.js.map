{"version":3,"sources":["../node_modules/prismjs/components/prism-js-extras.js"],"names":["Prism","withId","source","flags","RegExp","replace","languages","insertBefore","method-variable","pattern","javascript","lookbehind","alias","method","known-class-name","imports","inside","exports","unshift","spread","arrow","property-access","maybe-class-name","dom","console","maybeClassNameTokens","i","length","token","value","util","type"],"mappings":"8EAAA,SAAAA,GAmCA,SAAAC,EAAAC,EAAAC,GACA,OAAAC,OAAAF,EAAAG,QAAA,mBACA,+CAAAH,SACKC,GArCLH,EAAAM,UAAAC,aAAA,kCACAC,kBAAA,CACAC,QAAAL,OAAA,YAAAJ,EAAAM,UAAAI,WAAA,qBAAAD,QAAAP,QACAS,YAAA,EACAC,MAAA,+DAGAZ,EAAAM,UAAAC,aAAA,yBACAM,OAAA,CACAJ,QAAAL,OAAA,YAAAJ,EAAAM,UAAAI,WAAA,SAAAR,QACAS,YAAA,EACAC,MAAA,kCAGAZ,EAAAM,UAAAC,aAAA,yBACAO,mBAAA,EAGAL,QAAA,yOACAG,MAAA,cACK,CAELH,QAAA,wBACAG,MAAA,iBAiBAZ,EAAAM,UAAAC,aAAA,wBACAQ,QAAA,CAEAN,QAAAR,EAAA,4GAAgHC,QAChHS,YAAA,EACAK,OAAAhB,EAAAM,UAAAI,YAEAO,QAAA,CAEAR,QAAAR,EAAA,mEAAsFC,QACtFS,YAAA,EACAK,OAAAhB,EAAAM,UAAAI,cAGAV,EAAAM,UAAAI,WAAA,QAAAQ,QAAA,CACAT,QAAA,wCACAG,MAAA,UACG,CACHH,QAAA,gGACAG,MAAA,gBACG,CACHH,QAAA,WACAG,MAAA,gBACG,CACHH,QAAA,gBACAG,MAAA,QAEAZ,EAAAM,UAAAC,aAAA,yBACAY,OAAA,CACAV,QAAA,QACAG,MAAA,YAEAQ,MAAA,CACAX,QAAA,KACAG,MAAA,cAGAZ,EAAAM,UAAAC,aAAA,4BACAc,kBAAA,CACAZ,QAAAR,EAAA,gBAAAC,QACAS,YAAA,GAEAW,mBAAA,CACAb,QAAA,8CACAE,YAAA,GAEAY,IAAA,CAEAd,QAAA,kFACAG,MAAA,YAEAY,QAAA,CACAf,QAAA,qBACAG,MAAA,gBAMA,IAFA,IAAAa,EAAA,8EAEAC,EAAA,EAAiBA,EAAAD,EAAAE,OAAiCD,IAAA,CAClD,IAAAE,EAAAH,EAAAC,GACAG,EAAA7B,EAAAM,UAAAI,WAAAkB,GAEA,WAAA5B,EAAA8B,KAAAC,KAAAF,KACAA,EAAA7B,EAAAM,UAAAI,WAAAkB,GAAA,CACAnB,QAAAoB,IAKA,IAAAb,EAAAa,EAAAb,QAAA,GACAa,EAAAb,SACAA,EAAA,qCAjHA,CAmHChB","file":"static/js/203.2064501e.chunk.js","sourcesContent":["(function (Prism) {\n  Prism.languages.insertBefore('javascript', 'function-variable', {\n    'method-variable': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function-variable'].pattern.source),\n      lookbehind: true,\n      alias: ['function-variable', 'method', 'function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'function', {\n    'method': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function'].source),\n      lookbehind: true,\n      alias: ['function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'constant', {\n    'known-class-name': [{\n      // standard built-ins\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\n      pattern: /\\b(?:(?:(?:Uint|Int)(?:8|16|32)|Uint8Clamped|Float(?:32|64))?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|(?:Weak)?(?:Set|Map)|WebAssembly)\\b/,\n      alias: 'class-name'\n    }, {\n      // errors\n      pattern: /\\b(?:[A-Z]\\w*)Error\\b/,\n      alias: 'class-name'\n    }]\n  });\n  /**\n   * Replaces the `<ID>` placeholder in the given pattern with a pattern for general JS identifiers.\n   *\n   * @param {string} source\n   * @param {string} [flags]\n   * @returns {RegExp}\n   */\n\n  function withId(source, flags) {\n    return RegExp(source.replace(/<ID>/g, function () {\n      return /[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*/.source;\n    }), flags);\n  }\n\n  Prism.languages.insertBefore('javascript', 'keyword', {\n    'imports': {\n      // https://tc39.es/ecma262/#sec-imports\n      pattern: withId(/(\\bimport\\b\\s*)(?:<ID>(?:\\s*,\\s*(?:\\*\\s*as\\s+<ID>|\\{[^{}]*\\}))?|\\*\\s*as\\s+<ID>|\\{[^{}]*\\})(?=\\s*\\bfrom\\b)/.source),\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    },\n    'exports': {\n      // https://tc39.es/ecma262/#sec-exports\n      pattern: withId(/(\\bexport\\b\\s*)(?:\\*(?:\\s*as\\s+<ID>)?(?=\\s*\\bfrom\\b)|\\{[^{}]*\\})/.source),\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    }\n  });\n  Prism.languages.javascript['keyword'].unshift({\n    pattern: /\\b(?:as|default|export|from|import)\\b/,\n    alias: 'module'\n  }, {\n    pattern: /\\b(?:await|break|catch|continue|do|else|for|finally|if|return|switch|throw|try|while|yield)\\b/,\n    alias: 'control-flow'\n  }, {\n    pattern: /\\bnull\\b/,\n    alias: ['null', 'nil']\n  }, {\n    pattern: /\\bundefined\\b/,\n    alias: 'nil'\n  });\n  Prism.languages.insertBefore('javascript', 'operator', {\n    'spread': {\n      pattern: /\\.{3}/,\n      alias: 'operator'\n    },\n    'arrow': {\n      pattern: /=>/,\n      alias: 'operator'\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'punctuation', {\n    'property-access': {\n      pattern: withId(/(\\.\\s*)#?<ID>/.source),\n      lookbehind: true\n    },\n    'maybe-class-name': {\n      pattern: /(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/,\n      lookbehind: true\n    },\n    'dom': {\n      // this contains only a few commonly used DOM variables\n      pattern: /\\b(?:document|location|navigator|performance|(?:local|session)Storage|window)\\b/,\n      alias: 'variable'\n    },\n    'console': {\n      pattern: /\\bconsole(?=\\s*\\.)/,\n      alias: 'class-name'\n    }\n  }); // add 'maybe-class-name' to tokens which might be a class name\n\n  var maybeClassNameTokens = ['function', 'function-variable', 'method', 'method-variable', 'property-access'];\n\n  for (var i = 0; i < maybeClassNameTokens.length; i++) {\n    var token = maybeClassNameTokens[i];\n    var value = Prism.languages.javascript[token]; // convert regex to object\n\n    if (Prism.util.type(value) === 'RegExp') {\n      value = Prism.languages.javascript[token] = {\n        pattern: value\n      };\n    } // keep in mind that we don't support arrays\n\n\n    var inside = value.inside || {};\n    value.inside = inside;\n    inside['maybe-class-name'] = /^[A-Z][\\s\\S]*/;\n  }\n})(Prism);"],"sourceRoot":""}