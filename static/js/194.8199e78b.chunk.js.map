{"version":3,"sources":["../node_modules/prismjs/components/prism-javadoclike.min.js"],"names":["p","a","languages","javadoclike","parameter","pattern","lookbehind","keyword","punctuation","Object","defineProperty","value","e","forEach","n","t","r","insertBefore","doc-comment","alias","RegExp","Array","isArray","i","s","length","inside","rest","addSupport","Prism"],"mappings":"8EAAA,SAAAA,GACA,IAAAC,EAAAD,EAAAE,UAAAC,YAAA,CACAC,UAAA,CACAC,QAAA,8DACAC,YAAA,GAEAC,QAAA,CACAF,QAAA,qDACAC,YAAA,GAEAE,YAAA,QAEAC,OAAAC,eAAAT,EAAA,cACAU,MAAA,SAAAV,EAAAW,GACA,iBAAAX,MAAA,CAAAA,MAAAY,QAAA,SAAAZ,IACA,SAAAA,EAAAW,GACA,IAAAE,EAAA,cACAC,EAAAf,EAAAE,UAAAD,GAEA,GAAAc,EAAA,CACA,IAAAC,EAAAD,EAAAD,GAEA,IAAAE,EAAA,CAQAA,GAAAD,EAAAf,EAAAE,UAAAe,aAAAhB,EAAA,UAPA,CACAiB,cAAA,CACAb,QAAA,wCACAC,YAAA,EACAa,MAAA,cAGAL,GAGA,GAAAE,aAAAI,SAAAJ,EAAAD,EAAAD,GAAA,CACAT,QAAAW,IACaK,MAAAC,QAAAN,GAAA,QAAAO,EAAA,EAAAC,EAAAR,EAAAS,OAAkDF,EAAAC,EAAOD,IACtEP,EAAAO,aAAAH,SAAAJ,EAAAO,GAAA,CACAlB,QAAAW,EAAAO,KACeX,EAAAI,EAAAO,SACFX,EAAAI,IAxBb,CA0BSf,EAAA,SAAAA,GACTA,EAAAyB,SAAAzB,EAAAyB,OAAA,IAAoCzB,EAAAyB,OAAAC,KAAAf,SAIjCX,EAAA2B,WAAA,4BAAA3B,GA9CH,CA+CC4B","file":"static/js/194.8199e78b.chunk.js","sourcesContent":["!function (p) {\n  var a = p.languages.javadoclike = {\n    parameter: {\n      pattern: /(^\\s*(?:\\/{3}|\\*|\\/\\*\\*)\\s*@(?:param|arg|arguments)\\s+)\\w+/m,\n      lookbehind: !0\n    },\n    keyword: {\n      pattern: /(^\\s*(?:\\/{3}|\\*|\\/\\*\\*)\\s*|\\{)@[a-z][a-zA-Z-]+\\b/m,\n      lookbehind: !0\n    },\n    punctuation: /[{}]/\n  };\n  Object.defineProperty(a, \"addSupport\", {\n    value: function value(a, e) {\n      \"string\" == typeof a && (a = [a]), a.forEach(function (a) {\n        !function (a, e) {\n          var n = \"doc-comment\",\n              t = p.languages[a];\n\n          if (t) {\n            var r = t[n];\n\n            if (!r) {\n              var o = {\n                \"doc-comment\": {\n                  pattern: /(^|[^\\\\])\\/\\*\\*[^/][\\s\\S]*?(?:\\*\\/|$)/,\n                  lookbehind: !0,\n                  alias: \"comment\"\n                }\n              };\n              r = (t = p.languages.insertBefore(a, \"comment\", o))[n];\n            }\n\n            if (r instanceof RegExp && (r = t[n] = {\n              pattern: r\n            }), Array.isArray(r)) for (var i = 0, s = r.length; i < s; i++) {\n              r[i] instanceof RegExp && (r[i] = {\n                pattern: r[i]\n              }), e(r[i]);\n            } else e(r);\n          }\n        }(a, function (a) {\n          a.inside || (a.inside = {}), a.inside.rest = e;\n        });\n      });\n    }\n  }), a.addSupport([\"java\", \"javascript\", \"php\"], a);\n}(Prism);"],"sourceRoot":""}