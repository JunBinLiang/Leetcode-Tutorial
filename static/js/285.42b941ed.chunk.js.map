{"version":3,"sources":["../node_modules/prismjs/components/prism-ocaml.js"],"names":["Prism","languages","ocaml","comment","string","pattern","greedy","number","directive","alias","label","type_variable","variant","module","keyword","boolean","operator","punctuation"],"mappings":"6EAAAA,MAAAC,UAAAC,MAAA,CACAC,QAAA,mBACAC,OAAA,EACAC,QAAA,wBACAC,QAAA,GACG,CACHD,QAAA,qDACAC,QAAA,IAEAC,OAAA,yEACAC,UAAA,CACAH,QAAA,SACAI,MAAA,aAEAC,MAAA,CACAL,QAAA,SACAI,MAAA,YAEAE,cAAA,CACAN,QAAA,SACAI,MAAA,YAEAG,QAAA,CACAP,QAAA,OACAI,MAAA,YAEAI,OAAA,CACAR,QAAA,aACAI,MAAA,YAIAK,QAAA,gSACAC,QAAA,qBAEAC,SAAA,8FACAC,YAAA","file":"static/js/285.42b941ed.chunk.js","sourcesContent":["Prism.languages.ocaml = {\n  'comment': /\\(\\*[\\s\\S]*?\\*\\)/,\n  'string': [{\n    pattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  }, {\n    pattern: /(['`])(?:\\\\(?:\\d+|x[\\da-f]+|.)|(?!\\1)[^\\\\\\r\\n])\\1/i,\n    greedy: true\n  }],\n  'number': /\\b(?:0x[\\da-f][\\da-f_]+|(?:0[bo])?\\d[\\d_]*\\.?[\\d_]*(?:e[+-]?[\\d_]+)?)/i,\n  'directive': {\n    pattern: /\\B#\\w+/,\n    alias: 'important'\n  },\n  'label': {\n    pattern: /\\B~\\w+/,\n    alias: 'function'\n  },\n  'type_variable': {\n    pattern: /\\B'\\w+/,\n    alias: 'function'\n  },\n  'variant': {\n    pattern: /`\\w+/,\n    alias: 'variable'\n  },\n  'module': {\n    pattern: /\\b[A-Z]\\w+/,\n    alias: 'variable'\n  },\n  // For the list of keywords and operators,\n  // see: http://caml.inria.fr/pub/docs/manual-ocaml/lex.html#sec84\n  'keyword': /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|nonrec|object|of|open|private|rec|sig|struct|then|to|try|type|val|value|virtual|when|where|while|with)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  // Custom operators are allowed\n  'operator': /:=|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lsl|lsr|lxor|mod|or)\\b/,\n  'punctuation': /[(){}\\[\\]|.,:;]|\\b_\\b/\n};"],"sourceRoot":""}