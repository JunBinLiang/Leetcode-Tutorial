{"version":3,"sources":["../node_modules/prismjs/components/prism-smali.js"],"names":["Prism","languages","smali","comment","string","pattern","greedy","class-name","inside","lookbehind","namespace","punctuation","builtin","keyword","function","field","alias","register","boolean","number","label","operator"],"mappings":"6EAEAA,MAAAC,UAAAC,MAAA,CACAC,QAAA,MACAC,OAAA,CACAC,QAAA,gEACAC,QAAA,GAEAC,aAAA,CACAF,QAAA,4DACAG,OAAA,CACAD,aAAA,CACAF,QAAA,iCACAI,YAAA,GAEAC,UAAA,CACAL,QAAA,iCACAI,YAAA,EACAD,OAAA,CACAG,YAAA,OAGAC,QAAA,OAGAA,QAAA,EAEAP,QAAA,wBACAI,YAAA,GACG,CAEHJ,QAAA,uBACAI,YAAA,IAEAI,QAAA,EACAR,QAAA,mBACAI,YAAA,GACG,CACHJ,QAAA,4BACAI,YAAA,GACG,CACHJ,QAAA,0JACAI,YAAA,IAEAK,SAAA,CACAT,QAAA,qCACAI,YAAA,GAEAM,MAAA,CACAV,QAAA,cACAW,MAAA,YAEAC,SAAA,CACAZ,QAAA,8BACAI,YAAA,EACAO,MAAA,YAEAE,QAAA,CACAb,QAAA,sCACAI,YAAA,GAEAU,OAAA,CACAd,QAAA,uJACAI,YAAA,GAEAW,MAAA,CACAf,QAAA,SACAI,YAAA,EACAO,MAAA,YAEAK,SAAA,gBACAV,YAAA","file":"static/js/377.6a6db84c.chunk.js","sourcesContent":["// Test files for the parser itself:\n// https://github.com/JesusFreke/smali/tree/master/smali/src/test/resources/LexerTest\nPrism.languages.smali = {\n  'comment': /#.*/,\n  'string': {\n    pattern: /\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"|'(?:[^\\r\\n\\\\']|\\\\(?:.|u[\\da-fA-F]{4}))'/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /L(?:(?:\\w+|`[^`\\r\\n]*`)\\/)*(?:[\\w$]+|`[^`\\r\\n]*`)(?=\\s*;)/,\n    inside: {\n      'class-name': {\n        pattern: /(^L|\\/)(?:[\\w$]+|`[^`\\r\\n]*`)$/,\n        lookbehind: true\n      },\n      'namespace': {\n        pattern: /^(L)(?:(?:\\w+|`[^`\\r\\n]*`)\\/)+/,\n        lookbehind: true,\n        inside: {\n          'punctuation': /\\//\n        }\n      },\n      'builtin': /^L/\n    }\n  },\n  'builtin': [{\n    // Reference: https://github.com/JesusFreke/smali/wiki/TypesMethodsAndFields#types\n    pattern: /([();\\[])[BCDFIJSVZ]+/,\n    lookbehind: true\n  }, {\n    // e.g. .field mWifiOnUid:I\n    pattern: /([\\w$>]:)[BCDFIJSVZ]/,\n    lookbehind: true\n  }],\n  'keyword': [{\n    pattern: /(\\.end\\s+)[\\w-]+/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^\\w.-])\\.(?!\\d)[\\w-]+/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^\\w.-])(?:abstract|annotation|bridge|constructor|enum|final|interface|private|protected|public|runtime|static|synthetic|system|transient)(?![\\w.-])/,\n    lookbehind: true\n  }],\n  'function': {\n    pattern: /(^|[^\\w.-])(?:\\w+|<[\\w$-]+>)(?=\\()/,\n    lookbehind: true\n  },\n  'field': {\n    pattern: /[\\w$]+(?=:)/,\n    alias: 'variable'\n  },\n  'register': {\n    pattern: /(^|[^\\w.-])[vp]\\d(?![\\w.-])/,\n    lookbehind: true,\n    alias: 'variable'\n  },\n  'boolean': {\n    pattern: /(^|[^\\w.-])(?:true|false)(?![\\w.-])/,\n    lookbehind: true\n  },\n  'number': {\n    pattern: /(^|[^/\\w.-])-?(?:NAN|INFINITY|0x(?:[\\dA-F]+(?:\\.[\\dA-F]*)?|\\.[\\dA-F]+)(?:p[+-]?[\\dA-F]+)?|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?)[dflst]?(?![\\w.-])/i,\n    lookbehind: true\n  },\n  'label': {\n    pattern: /(:)\\w+/,\n    lookbehind: true,\n    alias: 'property'\n  },\n  'operator': /->|\\.\\.|[\\[=]/,\n  'punctuation': /[{}(),;:]/\n};"],"sourceRoot":""}